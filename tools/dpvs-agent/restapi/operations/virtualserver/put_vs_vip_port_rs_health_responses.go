// Code generated by go-swagger; DO NOT EDIT.

package virtualserver

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/dpvs-agent/models"
)

// PutVsVipPortRsHealthOKCode is the HTTP code returned for type PutVsVipPortRsHealthOK
const PutVsVipPortRsHealthOKCode int = 200

/*
PutVsVipPortRsHealthOK Success

swagger:response putVsVipPortRsHealthOK
*/
type PutVsVipPortRsHealthOK struct {

	/*
	  In: Body
	*/
	Payload *models.RealServerExpandList `json:"body,omitempty"`
}

// NewPutVsVipPortRsHealthOK creates PutVsVipPortRsHealthOK with default headers values
func NewPutVsVipPortRsHealthOK() *PutVsVipPortRsHealthOK {

	return &PutVsVipPortRsHealthOK{}
}

// WithPayload adds the payload to the put vs vip port rs health o k response
func (o *PutVsVipPortRsHealthOK) WithPayload(payload *models.RealServerExpandList) *PutVsVipPortRsHealthOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put vs vip port rs health o k response
func (o *PutVsVipPortRsHealthOK) SetPayload(payload *models.RealServerExpandList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutVsVipPortRsHealthOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutVsVipPortRsHealthUnexpectedCode is the HTTP code returned for type PutVsVipPortRsHealthUnexpected
const PutVsVipPortRsHealthUnexpectedCode int = 270

/*
PutVsVipPortRsHealthUnexpected the rss-config parameter is outdated, update nothing and return the latest rs info

swagger:response putVsVipPortRsHealthUnexpected
*/
type PutVsVipPortRsHealthUnexpected struct {

	/*
	  In: Body
	*/
	Payload *models.RealServerExpandList `json:"body,omitempty"`
}

// NewPutVsVipPortRsHealthUnexpected creates PutVsVipPortRsHealthUnexpected with default headers values
func NewPutVsVipPortRsHealthUnexpected() *PutVsVipPortRsHealthUnexpected {

	return &PutVsVipPortRsHealthUnexpected{}
}

// WithPayload adds the payload to the put vs vip port rs health unexpected response
func (o *PutVsVipPortRsHealthUnexpected) WithPayload(payload *models.RealServerExpandList) *PutVsVipPortRsHealthUnexpected {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put vs vip port rs health unexpected response
func (o *PutVsVipPortRsHealthUnexpected) SetPayload(payload *models.RealServerExpandList) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutVsVipPortRsHealthUnexpected) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(270)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// PutVsVipPortRsHealthInvalidFrontendCode is the HTTP code returned for type PutVsVipPortRsHealthInvalidFrontend
const PutVsVipPortRsHealthInvalidFrontendCode int = 460

/*
PutVsVipPortRsHealthInvalidFrontend Invalid frontend in service configuration

swagger:response putVsVipPortRsHealthInvalidFrontend
*/
type PutVsVipPortRsHealthInvalidFrontend struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutVsVipPortRsHealthInvalidFrontend creates PutVsVipPortRsHealthInvalidFrontend with default headers values
func NewPutVsVipPortRsHealthInvalidFrontend() *PutVsVipPortRsHealthInvalidFrontend {

	return &PutVsVipPortRsHealthInvalidFrontend{}
}

// WithPayload adds the payload to the put vs vip port rs health invalid frontend response
func (o *PutVsVipPortRsHealthInvalidFrontend) WithPayload(payload models.Error) *PutVsVipPortRsHealthInvalidFrontend {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put vs vip port rs health invalid frontend response
func (o *PutVsVipPortRsHealthInvalidFrontend) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutVsVipPortRsHealthInvalidFrontend) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(460)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutVsVipPortRsHealthInvalidBackendCode is the HTTP code returned for type PutVsVipPortRsHealthInvalidBackend
const PutVsVipPortRsHealthInvalidBackendCode int = 461

/*
PutVsVipPortRsHealthInvalidBackend Invalid backend in service configuration

swagger:response putVsVipPortRsHealthInvalidBackend
*/
type PutVsVipPortRsHealthInvalidBackend struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutVsVipPortRsHealthInvalidBackend creates PutVsVipPortRsHealthInvalidBackend with default headers values
func NewPutVsVipPortRsHealthInvalidBackend() *PutVsVipPortRsHealthInvalidBackend {

	return &PutVsVipPortRsHealthInvalidBackend{}
}

// WithPayload adds the payload to the put vs vip port rs health invalid backend response
func (o *PutVsVipPortRsHealthInvalidBackend) WithPayload(payload models.Error) *PutVsVipPortRsHealthInvalidBackend {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put vs vip port rs health invalid backend response
func (o *PutVsVipPortRsHealthInvalidBackend) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutVsVipPortRsHealthInvalidBackend) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(461)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// PutVsVipPortRsHealthFailureCode is the HTTP code returned for type PutVsVipPortRsHealthFailure
const PutVsVipPortRsHealthFailureCode int = 500

/*
PutVsVipPortRsHealthFailure Service deletion failed

swagger:response putVsVipPortRsHealthFailure
*/
type PutVsVipPortRsHealthFailure struct {

	/*
	  In: Body
	*/
	Payload models.Error `json:"body,omitempty"`
}

// NewPutVsVipPortRsHealthFailure creates PutVsVipPortRsHealthFailure with default headers values
func NewPutVsVipPortRsHealthFailure() *PutVsVipPortRsHealthFailure {

	return &PutVsVipPortRsHealthFailure{}
}

// WithPayload adds the payload to the put vs vip port rs health failure response
func (o *PutVsVipPortRsHealthFailure) WithPayload(payload models.Error) *PutVsVipPortRsHealthFailure {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the put vs vip port rs health failure response
func (o *PutVsVipPortRsHealthFailure) SetPayload(payload models.Error) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *PutVsVipPortRsHealthFailure) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(500)
	payload := o.Payload
	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}
